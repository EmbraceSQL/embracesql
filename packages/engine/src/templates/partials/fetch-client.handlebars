/**
* Create an EmbraceSQL client bound to a specific URL.
*/
export const EmbraceSQL = (serverUrl: string, headers = {} as Headers) => {
  let sendHeaders = headers;
  const DatabaseMap = {
    setHeaders: (headers: Headers) => sendHeaders = headers,
    databases: {
    {{#eachInMap databases}}
      {{@key}}: {
      {{#treeAMap value.modules database=value}}
        {{#each value}}
        {{> moduleTree this database=@database}}
        {{/each}}
      {{/treeAMap}}
      },
    {{/eachInMap}}
    }
  };
  return DatabaseMap;
};

{{#*inline "moduleTree"}}
  {{#if children.length}}
  {{name}}: {
  {{#each children}}
    {{> moduleTree this database=database}}
  {{/each}}
  },
  {{else}}
  {{name}}:
    {{#if value.namedParameters.length}}
    async (...parameters: context.{{value.contextName}}ParameterSet[]) : Promise<context.{{value.contextName}}Row[]> => {
      return post(serverUrl, "/{{value.restPath}}", parameters.flat(), sendHeaders) as unknown as context.{{value.contextName}}Row[];
    },
    {{else}}
    async () : Promise<context.{{value.contextName}}Row[]> => {
      return post(serverUrl, "/{{value.restPath}}", {}, sendHeaders) as unknown as context.{{value.contextName}}Row[];
    },
    {{/if}}
  {{/if}}
{{/inline}}
